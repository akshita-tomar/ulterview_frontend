{"version":3,"file":"static/js/645.9090b841.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    // @ts-expect-error\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    // @ts-expect-error\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["_excluded","useButtonProps","_ref2","tagName","disabled","href","target","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","Button","React","_ref","ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","_jsx","displayName","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","responsiveClass","children","PACKET_TYPES","create","PACKET_TYPES_REVERSE","forEach","ERROR_PACKET","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","shift","j","slice","Emitter","mixin","on","addEventListener","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","prev","seed","num","Math","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","join","empty","hasXHR2","responseType","Request","uri","method","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","decodePayload","encodedPayload","encodedPackets","decodedPacket","encodePayload","count","doWrite","request","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_len2","_key2","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","_this","ackTimeout","timer","_len3","_key3","withError","emitWithAck","_len4","_key4","reject","arg1","arg2","_this2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","_len6","_key6","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}