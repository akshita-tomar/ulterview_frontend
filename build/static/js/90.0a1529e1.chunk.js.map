{"version":3,"file":"static/js/90.0a1529e1.chunk.js","mappings":"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","sources":["components/homepage/homepage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { MdEdit, MdDelete } from \"react-icons/md\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Swal from \"sweetalert2\";\r\nimport { RiQuestionnaireFill } from \"react-icons/ri\";\r\nimport \"./homepage.css\"\r\nimport { PiNotebookFill } from \"react-icons/pi\"\r\nimport { useAppContext } from \"../../utils/useContext\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { FaBars } from \"react-icons/fa\";\r\n\r\nconst HomePage = () => {\r\n  const [languages, setLanguages] = useState([]);\r\n  const [showLanguageModal, setShowLanguageModal] = useState(false);\r\n  const [showAddlanguageModal, setShowAddlanguageModal] = useState(false)\r\n  const [newlanguage, setNewLanguage] = useState('')\r\n  const [showseries, setShowSeries] = useState(false)\r\n\r\n  const [seriesOptions, setSeriesOptions] = useState([])\r\n  const [series, setSeries] = useState('')\r\n  const [showcreteTasksection, setShowcreteTasksection] = useState(false)\r\n  const [configurechange, setconfigureChange] = useState(0)\r\n  const [showEditBox, setshowEditBox] = useState(false)\r\n  const [languageId, setLanguageId] = useState('')\r\n  const [holdLanguage, setHoldLanguage] = useState('')\r\n  const [openAddnewseriesModal, setopenAddnewseriesModal] = useState(false)\r\n  const [holdNewSeries, setHoldNewSeries] = useState('')\r\n  const [configureSeriesChange, setConfigureSeriesChange] = useState(0)\r\n  const [openEditseriesModal, setOpenEditseriesModal] = useState(false)\r\n  const [seriesId, setSeriesId] = useState('')\r\n  const [updatedSeries, setUpdatedSeries] = useState('')\r\n  const [taskTime, setTaskTime] = useState(0)\r\n  const [updatedTasktime, setUpdatedTaskTime] = useState(0)\r\n  const navigate = useNavigate();\r\n  let token = localStorage.getItem('token')\r\n\r\n  const url = process.env.REACT_APP_BACKEND_URL\r\n\r\n\r\n  useEffect(() => {\r\n    let token = localStorage.getItem('token')\r\n    let languageId = localStorage.getItem('languageId')\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`${url}/getAllSeries?languageId=${languageId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        // console.log(\"series---\", result)\r\n        if (result.type === 'success') {\r\n          setSeriesOptions(result.allSeries)\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, [configureSeriesChange])\r\n\r\n\r\n  useEffect(() => {\r\n    fetchLanguages()\r\n  }, [configurechange])\r\n\r\n  const fetchLanguages = () => {\r\n    let token = localStorage.getItem('token')\r\n    if (!token) {\r\n      navigate('/');\r\n    }\r\n    setSeries('')\r\n    setShowcreteTasksection(true)\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`${url}getAllLanguages`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setLanguages(result.data);\r\n        setShowLanguageModal(true);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n  const addLanguages = async (e) => {\r\n    e.preventDefault();\r\n    let token = localStorage.getItem('token')\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const raw = JSON.stringify({\r\n      \"language\": newlanguage\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`${url}addLanguage`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        // console.log(result)\r\n        if (result.type === 'error') {\r\n          toast.error(result.message, {\r\n            duration: 1000\r\n          })\r\n        } else {\r\n          setShowAddlanguageModal(false)\r\n          fetchLanguages();\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  const handleLanguageClick = (language, id) => {\r\n    let mylanguage = language\r\n    localStorage.setItem(\"language\", language)\r\n    localStorage.setItem('languageId', id)\r\n\r\n    let token = localStorage.getItem('token')\r\n    if (!token) {\r\n      navigate('/')\r\n    }\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const raw = JSON.stringify({\r\n      \"language\": mylanguage\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`${url}UpdateUserLanguage`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n\r\n        if (result.type === 'error') {\r\n          toast.error(result.message)\r\n        } else {\r\n          setShowLanguageModal(false);\r\n          setConfigureSeriesChange(prev => prev + 1)\r\n          setShowSeries(true)\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n\r\n  };\r\n\r\n  const handleDeleteLanguage = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#ce2128\",\r\n      cancelButtonColor: \"#333\",\r\n      confirmButtonText: \"Yes, delete it!\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        handleDeleteLanguageYes(id)\r\n\r\n      } else {\r\n        // handleDeleteLanguageYes(id)\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleDeleteLanguageYes = (id) => {\r\n\r\n    let token = localStorage.getItem('token')\r\n    if (!token) {\r\n      navigate('/')\r\n    }\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`${url}deleteLanguage?languageId=${id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        // console.log(result)\r\n        if (result.type === 'error') {\r\n          toast.error(result.message)\r\n        } else {\r\n          setconfigureChange((prev) => prev + 1)\r\n        }\r\n      })\r\n      .catch((error) => console.error(error))\r\n  }\r\n\r\n\r\n  const updateLanguage = () => {\r\n\r\n    if (!token) {\r\n      navigate('/')\r\n    }\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const raw = JSON.stringify({\r\n      \"language\": holdLanguage\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`${url}updateLanguage?languageId=${languageId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        // console.log(result)\r\n        if (result.type === 'error') {\r\n          toast.error(result.message)\r\n        } else {\r\n          toast.success(result.message)\r\n          setshowEditBox(false)\r\n          setconfigureChange(prev => prev + 1)\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n\r\n\r\n  const handleEditLanguage = (id, language) => {\r\n    setHoldLanguage(language)\r\n    setLanguageId(id)\r\n    setshowEditBox(true)\r\n    setShowLanguageModal(false)\r\n  }\r\n\r\n\r\n  const handleAddNewLanguage = () => {\r\n    setShowLanguageModal(false)\r\n    setShowAddlanguageModal(true)\r\n  }\r\n\r\n  const closeAddlanguageModal = () => {\r\n    setShowAddlanguageModal(false)\r\n    setShowLanguageModal(true)\r\n  }\r\n\r\n  const showQuestion = (seriesId) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`${url}getSeries?seriesId=${seriesId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        // console.log(result)\r\n        if (result.type === 'success') {\r\n          localStorage.setItem('series', result.series.seriesName)\r\n          localStorage.setItem('seriesId', result.series._id)\r\n          setSeries(result.series.seriesName);\r\n          setShowSeries(false);\r\n          setShowLanguageModal(false);\r\n          if (localStorage.getItem('role') === 'DEVELOPER') {\r\n            navigate('/updateQuestions')\r\n          }\r\n          if (localStorage.getItem('role' === 'HR')) {\r\n            navigate('/candidates')\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n\r\n\r\n\r\n  const AddNewSeries = (e) => {\r\n    e.preventDefault()\r\n    let token = localStorage.getItem('token')\r\n    if (!token) {\r\n      navigate('/')\r\n    }\r\n    let languageId = localStorage.getItem('languageId')\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const raw = JSON.stringify({\r\n      \"seriesName\": holdNewSeries,\r\n      \"taskTime\": taskTime\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`${url}createSeries?languageId=${languageId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        // console.log(result)\r\n        if (result.type === 'success') {\r\n          setConfigureSeriesChange(prev => prev + 1)\r\n          setopenAddnewseriesModal(false)\r\n        }else{\r\n          toast.error(result.message)\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n\r\n\r\n  const delteSeries = (id, seriesName) => {\r\n    Swal.fire({\r\n      title: \"Are you sure to delete this series?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#ce2128\",\r\n      cancelButtonColor: \"#333\",\r\n      confirmButtonText: \"Yes, delete it!\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        delteSeriesyes(id, seriesName)\r\n      }\r\n    })\r\n  }\r\n\r\n  const delteSeriesyes = (id, seriesName) => {\r\n    let token = localStorage.getItem('token')\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`${url}deleteSeries?seriesId=${id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        // console.log(result)\r\n        setConfigureSeriesChange(prev => prev + 1)\r\n        // swal(seriesName + \" deleted successfully!\", \"\", \"success\");\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n\r\n\r\n  const AddEditSeries = () => {\r\n    let token = localStorage.getItem('token')\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const raw = JSON.stringify({\r\n      \"updatedSeries\": updatedSeries ? updatedSeries : series,\r\n      \"taskTime\": updatedTasktime ? updatedTasktime : taskTime\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`${url}updateSeries?updateSeriesId=${seriesId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        // console.log(result)\r\n        if (result.type === 'success') {\r\n          setConfigureSeriesChange(prev => prev + 1)\r\n          setOpenEditseriesModal(false)\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n\r\n  const handleEditSeries = (seriesName, seriesId, taskTime) => {\r\n    setSeriesId(seriesId)\r\n    setSeries(seriesName)\r\n    setTaskTime(taskTime)\r\n    setOpenEditseriesModal(true)\r\n  }\r\n\r\n  const handleCloseEditSeries = () => {\r\n    setOpenEditseriesModal(false)\r\n  }\r\n\r\n  const closeseries = () => {\r\n    setShowSeries(false)\r\n    setShowLanguageModal(true)\r\n  }\r\n\r\n  const closeAddlanguageModal2 = () => {\r\n    setshowEditBox(false)\r\n    setShowLanguageModal(true)\r\n  }\r\n\r\n  const openAddseries = () => {\r\n    setopenAddnewseriesModal(true)\r\n  }\r\n\r\n  const handlecloseAddseriesModal = () => {\r\n    setopenAddnewseriesModal(false)\r\n  }\r\n\r\n  const handleCandidateResults = () => {\r\n    navigate('/candidates-performance')\r\n  }\r\n  const { show, setShow } = useAppContext();\r\n\r\n  const path=useLocation()\r\n\r\n  return (\r\n    <>\r\n      <div className={`sidebar ${show ? \"cmn_width\" : \"\"}`}>\r\n        <h3 className=\"bar\" onClick={() => { setShow(!show) }}>{show ? <RxCross2 className=\"p-0 text-center\" /> : <FaBars />}</h3>\r\n\r\n        <div className={`sidebar-button mt-4 ${path.pathname===\"/homepage\" ? \"active-pathname\":\"\"}`}  onClick={fetchLanguages}>\r\n          <div className=\"sidebar_content\"><RiQuestionnaireFill/><h4 className={show? \"d-none\":\"sidebar_content\"}>Questionnaire</h4></div>\r\n        </div>\r\n        <div className={`sidebar-button mt-2 ${path.pathname===\"/candidates-performance\" ? \"active-pathname\":\"\"}`} onClick={handleCandidateResults}>\r\n          <div className=\"sidebar_content\">\r\n            <PiNotebookFill />\r\n            <h4 className={show ? \"d-none\" : \"sidebar_content\"}>Candidate Results</h4>\r\n\r\n          </div>\r\n        </div>\r\n        <Toaster />\r\n      </div>\r\n      {showcreteTasksection && (\r\n        <>\r\n          {showLanguageModal && (\r\n            <div className=\"language-modal\">\r\n              <div className={`d-flex flex-wrap-wrap language-modal_outer  ${show ? \"\" : \"margin\"}`}>\r\n                {languages?.map((language) => (\r\n                  <div key={language.id} className=\"language-card align-items-center\">\r\n                    <h3 className=\"text-space\" onClick={() => handleLanguageClick(language.language, language._id)}> {language.language}</h3>\r\n\r\n                    {localStorage.getItem('role') === 'DEVELOPER' ? (\r\n                      <div className=\"card-inner\"><MdEdit onClick={() => handleEditLanguage(language._id, language.language)} /> <MdDelete onClick={() => handleDeleteLanguage(language._id)} /> </div>\r\n                    ) : null}\r\n                  </div>\r\n                ))}\r\n                {\r\n                  localStorage.getItem('role') === 'DEVELOPER' ? (\r\n                    <button className=\"add-more-languages-btn\" onClick={handleAddNewLanguage}>Add new</button>\r\n                  ) : null}\r\n\r\n              </div>\r\n            </div>\r\n\r\n          )}\r\n\r\n          <Modal centered show={showAddlanguageModal} onHide={closeAddlanguageModal} backdrop=\"static\" keyboard={false} className=\"modal-inner\" >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title className=\"heading\">Add language</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <input className=\"form-control\" required type=\"text\" placeholder=\"language\" onChange={event => setNewLanguage(event.target.value)} />\r\n            </Modal.Body>\r\n            <div className=\"language_footer\">\r\n              <button className=\"modal_close_btn\" onClick={closeAddlanguageModal}> Close </button>\r\n              <button className=\"modal_add_btn cmn_btn_color\" onClick={addLanguages} >Add</button>\r\n            </div>\r\n          </Modal>\r\n          <Modal centered show={showEditBox} onHide={closeAddlanguageModal2} backdrop=\"static\" keyboard={false} className=\"modal-inner\" >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title className=\"heading\">Update language</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <input className=\"form-control\" required defaultValue={holdLanguage} type=\"text\" onChange={event => setHoldLanguage(event.target.value)} />\r\n            </Modal.Body>\r\n\r\n            <div className=\"language_footer\">\r\n            <button  onClick={closeAddlanguageModal2} className=\"modal_close_btn\"> Close</button>\r\n            <button className=\"modal_add_btn cmn_btn_color\" onClick={updateLanguage} >Update</button>\r\n            \r\n            </div>\r\n\r\n          </Modal>\r\n          {/* ****** Series */}\r\n          {showseries && (\r\n            <div className=\"series-modal-overlay\">\r\n              <div className=\"series-modal\">\r\n                <h3 className=\"close-series\" onClick={closeseries}> <RxCross2 /></h3>\r\n                <div className=\"modal-header\">\r\n                  <h3 className=\"heading\">Select Series</h3>\r\n                </div>\r\n                <div className=\"modal-body\">{\r\n                  localStorage.getItem('role') === 'DEVELOPER' ? (\r\n                    <div className=\"series-option-new\" onClick={openAddseries} >Add new series</div>\r\n                  ) : null}\r\n                  {seriesOptions.map((series, index) => (\r\n                    <>\r\n                      <div className={series.status === 'pending' ? 'series-outer-box-pending mt-3' : \"series-outer-box mt-3 series-outer-box-pending\"}>\r\n                        <h4 key={index} className=\"series-option\" onClick={() => showQuestion(series._id)}> {series.seriesName} ({series.status})</h4>\r\n                        {localStorage.getItem('role') === 'DEVELOPER' ? (\r\n                          <div className=\"edit_series_outer\">\r\n                            <MdEdit className=\"me-2\" onClick={() => handleEditSeries(series.seriesName, series._id, series.taskTime)} />\r\n                            <MdDelete onClick={() => delteSeries(series._id, series.seriesName)} />\r\n                          </div>\r\n                        ) : null}\r\n\r\n                      </div></>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <Modal centered show={openAddnewseriesModal} onHide={handlecloseAddseriesModal} backdrop=\"static\" keyboard={false} className=\"modal-inner\" >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title className=\"heading\">Add new series</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <input required className=\"input-field form-control\" type=\"text\" placeholder=\"Enter new series\" onChange={event => setHoldNewSeries(event.target.value)} />\r\n              <label className=\"mb-3 new_series_label\">Time taken to complete this series test (in minuites)</label>\r\n              <input required className=\"input-field form-control\" type=\"number\" min={0} placeholder=\"Enter task time\" value={taskTime} onChange={event => setTaskTime(event.target.value)} />\r\n            </Modal.Body>\r\n            <div className=\"language_footer\">\r\n              <button onClick={handlecloseAddseriesModal} className=\"modal_close_btn\"> Close</button>\r\n              <button className=\"modal_add_btn cmn_btn_color\" onClick={AddNewSeries} >Add</button>\r\n\r\n            </div>\r\n\r\n          </Modal>\r\n\r\n          <Modal centered show={openEditseriesModal} onHide={handleCloseEditSeries} backdrop=\"static\" keyboard={false} className=\"modal-inner\" >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title className=\"heading\">Edit series</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <input required className=\"input-field form-control \" type=\"text\" defaultValue={series} placeholder=\"Edit series\" onChange={event => setUpdatedSeries(event.target.value)} />\r\n              <input required className=\"input-field form-control\" type=\"number\" min={0} placeholder=\"Enter task time\" defaultValue={taskTime} onChange={event => setUpdatedTaskTime(event.target.value)} />\r\n            </Modal.Body>\r\n            <div className=\"language_footer\">\r\n              <button onClick={handleCloseEditSeries} className=\"modal_close_btn\"> Close</button>\r\n              <button className=\"modal_add_btn cmn_btn_color\" onClick={AddEditSeries} >Submit</button>\r\n\r\n            </div>\r\n\r\n          </Modal>\r\n        </>)}\r\n    </>)\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["HomePage","languages","setLanguages","useState","showLanguageModal","setShowLanguageModal","showAddlanguageModal","setShowAddlanguageModal","newlanguage","setNewLanguage","showseries","setShowSeries","seriesOptions","setSeriesOptions","series","setSeries","showcreteTasksection","setShowcreteTasksection","configurechange","setconfigureChange","showEditBox","setshowEditBox","languageId","setLanguageId","holdLanguage","setHoldLanguage","openAddnewseriesModal","setopenAddnewseriesModal","holdNewSeries","setHoldNewSeries","configureSeriesChange","setConfigureSeriesChange","openEditseriesModal","setOpenEditseriesModal","seriesId","setSeriesId","updatedSeries","setUpdatedSeries","taskTime","setTaskTime","updatedTasktime","setUpdatedTaskTime","navigate","useNavigate","token","localStorage","getItem","url","process","useEffect","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","concat","then","response","json","result","type","allSeries","catch","error","console","fetchLanguages","data","handleDeleteLanguageYes","id","toast","message","prev","closeAddlanguageModal","delteSeriesyes","seriesName","handleCloseEditSeries","closeAddlanguageModal2","handlecloseAddseriesModal","show","setShow","useAppContext","path","useLocation","_jsxs","_Fragment","children","className","_jsx","onClick","RxCross2","FaBars","pathname","RiQuestionnaireFill","handleCandidateResults","PiNotebookFill","Toaster","map","language","handleLanguageClick","mylanguage","setItem","body","JSON","stringify","_id","MdEdit","handleEditLanguage","MdDelete","handleDeleteLanguage","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","handleAddNewLanguage","Modal","centered","onHide","backdrop","keyboard","Header","closeButton","Title","Body","required","placeholder","onChange","event","target","value","async","e","preventDefault","duration","defaultValue","updateLanguage","success","closeseries","openAddseries","index","status","showQuestion","handleEditSeries","delteSeries","min","AddEditSeries"],"sourceRoot":""}