{"version":3,"file":"static/js/451.ba23121b.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/useRTGTransitionProps.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/RTGTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null || onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"addEndListener\", \"children\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { getReactVersion } from './utils';\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */\nexport default function useRTGTransitionProps(_ref) {\n  let {\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      addEndListener,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    major\n  } = getReactVersion();\n  const childRef = major >= 19 ? children.props.ref : children.ref;\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, typeof children === 'function' ? null : childRef);\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return Object.assign({}, props, {\n    nodeRef\n  }, onEnter && {\n    onEnter: handleEnter\n  }, onEntering && {\n    onEntering: handleEntering\n  }, onEntered && {\n    onEntered: handleEntered\n  }, onExit && {\n    onExit: handleExit\n  }, onExiting && {\n    onExiting: handleExiting\n  }, onExited && {\n    onExited: handleExited\n  }, addEndListener && {\n    addEndListener: handleAddEndListener\n  }, {\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, Object.assign({}, innerProps, {\n      ref: mergedRef\n    })) : /*#__PURE__*/cloneElement(children, {\n      ref: mergedRef\n    })\n  });\n}","import * as React from 'react';\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}\nexport function getReactVersion() {\n  const parts = React.version.split('.');\n  return {\n    major: +parts[0],\n    minor: +parts[1],\n    patch: +parts[2]\n  };\n}","const _excluded = [\"component\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport useRTGTransitionProps from './useRTGTransitionProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      component: Component\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const transitionProps = useRTGTransitionProps(props);\n  return /*#__PURE__*/_jsx(Component, Object.assign({\n    ref: ref\n  }, transitionProps));\n});\nexport default RTGTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null || context.onHide();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null || onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null || onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null || onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n    onExit == null || onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null || onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null || onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["useCallbackRef","useState","value","ref","useRef","useEffect","current","useEventCallback","fn","useCommittedRef","useCallback","arguments","isReactNative","global","navigator","product","document","useLayoutEffect","useMounted","mounted","isMounted","usePrevious","ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","concat","dataProp","_ref","children","in","inProp","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","combinedRef","useMergedRefs","child","cloneElement","Context","createContext","canUseDOM","window","undefined","Provider","useWindow","useContext","contains","context","node","compareDocumentPosition","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","fadeStyles","ENTERING","ENTERED","Fade","React","className","transitionClasses","onEnter","rest","timeout","appear","handleEnter","isAppearing","triggerBrowserReflow","_jsx","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","classNames","displayName","size","scrollbarSize","recalc","scrollDiv","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","onUnmount","valueRef","useUpdatedRef","activeElement","doc","ownerDocument","active","nodeName","e","OPEN_DATA_ATTRIBUTE","constructor","handleContainerOverflow","isRTL","length","this","modals","getScrollbarWidth","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","parseInt","css","setAttribute","reset","forEach","m","remove","removeContainerStyle","removeAttribute","Object","assign","add","modal","modalIdx","indexOf","push","state","splice","isTopModal","resolveContainerRef","getBoundingClientRect","_excluded","useRTGTransitionProps","onEntering","onEntered","onExit","onExiting","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","major","parts","split","minor","patch","getReactVersion","nodeRef","mergedRef","normalize","callback","param","handleEntering","handleEntered","handleExit","handleExiting","handleAddEndListener","component","Component","transitionProps","ImperativeTransition","_ref2","transition","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","renderTransition","runTransition","RTGTransition","NoopTransition","manager","useModalManager","provided","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","prevShow","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","tabIndex","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","classList","baseVal","hasClass","marginProp","el","sharedManager","ModalBody","bsPrefix","as","useBootstrapPrefix","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","propTypes","variant","CloseButton","ariaLabel","type","closeLabel","closeVariant","closeButton","ModalContext","handleClick","ModalHeader","AbstractModalHeader","DivStyledAsH4","p","ModalTitle","DialogTransition","BackdropTransition","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","addEventListener","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}