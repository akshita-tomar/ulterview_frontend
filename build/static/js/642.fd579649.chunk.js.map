{"version":3,"file":"static/js/642.fd579649.chunk.js","mappings":"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","sources":["components/updateQuestions/updateQuestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { MdOutlineArrowBack } from \"react-icons/md\"\r\n\r\nconst UpdateQuestions = () => {\r\n    const navigate = useNavigate()\r\n    const [configureChange, setConfigureSeriesChange] = useState(0)\r\n    const [questionAnswer, setQuestionAnswer] = useState([])\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n    const [correctAnswer, setCorrectAnswer] = useState()\r\n    const [options, setOptions] = useState([\"\", \"\", \"\", \"\"]);\r\n    let series = localStorage.getItem('seriesId')\r\n    let token = localStorage.getItem('token')\r\n\r\n\r\n    // const url = 'http://localhost:8000/api/v1/'\r\n    const url = 'http://16.171.41.223:8000/api/v1/'\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!token) {\r\n            navigate('/')\r\n        }\r\n\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n\r\n\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\"\r\n        };\r\n        fetch(`${url}getQuestionsSeriesWise?seriesId=${series}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                // if (result.type === 'error') {\r\n                //     console.log(result.message)\r\n                //     // toast.error(result.message)\r\n                // } else {\r\n                setQuestionAnswer(result)\r\n\r\n                // }\r\n            })\r\n            .catch((error) => console.error(error));\r\n\r\n    }, [series, configureChange])\r\n\r\n    console.log(\"questions ---\", questionAnswer)\r\n\r\n\r\n\r\n    const delteQuestion = (type, id) => {\r\n        console.log('type___-', type)\r\n        console.log('id___', id)\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const raw = JSON.stringify({\r\n            \"questionType\": type\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"DELETE\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}DeleteQuestionAnswer?questionId=${id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                // if (result.type === 'success') {\r\n                setConfigureSeriesChange(prev => prev + 1)\r\n                toast.success(result.message)\r\n\r\n                // }\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleUpdateSubjectiveQuestion = (questionType, id, qus, ans) => {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const raw = JSON.stringify({\r\n            \"questionType\": questionType,\r\n            \"answer\": answer ? answer : ans,\r\n            \"question\": question ? question : qus,\r\n            \"options\": options,\r\n            \"correctAnswer\": correctAnswer\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}updateQuestionAnswer?questionId=${id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                if (result.type === 'success') {\r\n                    setConfigureSeriesChange(prev => prev + 1)\r\n                    setQuestion('')\r\n                    setAnswer('')\r\n                    setCorrectAnswer()\r\n                    setOptions([\"\", \"\", \"\", \"\"])\r\n                    toast.success(result.message, {\r\n                        duration: 1000\r\n                    })\r\n\r\n                }\r\n            })\r\n            .catch((error) => console.error(error));\r\n\r\n    }\r\n\r\n\r\n    const updateLogicalQuestion = (questionType, id, qus, ans) => {\r\n\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const raw = JSON.stringify({\r\n            \"questionType\": questionType,\r\n            \"answer\": answer ? answer : ans,\r\n            \"question\": question ? question : qus,\r\n            \"options\": options,\r\n            \"correctAnswer\": correctAnswer\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}updateQuestionAnswer?questionId=${id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                if (result.type === 'success') {\r\n                    setConfigureSeriesChange(prev => prev + 1)\r\n                    setQuestion('')\r\n                    setAnswer('')\r\n                    setCorrectAnswer()\r\n                    setOptions([\"\", \"\", \"\", \"\"])\r\n                    toast.success(result.message, {\r\n                        duration: 1000\r\n                    })\r\n\r\n                }\r\n            })\r\n            .catch((error) => console.error(error));\r\n\r\n    }\r\n\r\n    const updateObjectiveQuestion = (questionType, id) => {\r\n    \r\n    }\r\n\r\n    const handleOptionChange = (index, value) => {\r\n        const newOptions = [...options];\r\n        newOptions[index] = value;\r\n        setOptions(newOptions);\r\n    };\r\n\r\n\r\n\r\n    const handleBackClick = () => {\r\n        navigate('/create-task')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"outer-edit-question-div\">\r\n            <div className=\"back-btn\" onClick={handleBackClick}>< MdOutlineArrowBack /></div>\r\n            <>\r\n                {\r\n                    questionAnswer?.questions?.objective?.length > 0 && (\r\n                        <div className=\"heading-objective\">Objective</div>\r\n                    )\r\n                }\r\n\r\n                {questionAnswer?.questions?.objective?.map((Element, index) => (\r\n                    <>\r\n                        <input className=\"mcq-question-edit\" type=\"text\" placeholder=\"Enter question\" defaultValue={Element.question} onChange={(e) => setQuestion(e.target.value)} />\r\n                        {Element?.options?.map((option, index) => (\r\n                            //    console.log(\"optioen----\",option)\r\n                            <input className=\"mcq-options\" key={index} type=\"text\" placeholder={`Option ${index + 1}`} defaultValue={option} onChange={(e) => handleOptionChange(index, e.target.value)} />\r\n                        ))}\r\n                        <label>Select correct answer:</label>\r\n                        <select defaultValue={Element.correctAnswer} onChange={(e) => setCorrectAnswer(parseInt(e.target.value))} >\r\n                            {Element?.options?.map((_, index) => (\r\n                                <option key={index} value={index + 1}>{index + 1}</option>\r\n                            ))}\r\n                        </select>\r\n                        <button className=\"Update-btn\" onClick={() => delteQuestion('objective', Element._id)}>DELETE</button><button className=\"Update-btn\" onClick={() => updateObjectiveQuestion('objective', Element._id)} >UPDATE</button>\r\n                    </>\r\n                ))}\r\n            </> <br></br>\r\n\r\n            <>\r\n                {\r\n                    questionAnswer?.questions?.subjective?.length > 0 && (\r\n                        <div className=\"heading-objective\">Subjective</div>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    questionAnswer?.questions?.subjective?.map((Element, index) => (\r\n                        <>\r\n                            <input className='mcq-question-edit' type=\"text\" placeholder=\"Enter subjective question\" defaultValue={Element.question} onChange={(e) => setQuestion(e.target.value)} />\r\n                            <textarea className=\"testbox-textarea\" type=\"text\" placeholder=\"Enter answer\" defaultValue={Element.answer} onChange={(e) => setAnswer(e.target.value)} />\r\n                            <button className=\"Update-btn\" onClick={() => delteQuestion('subjective', Element._id)} >DELETE</button><button className=\"Update-btn\" onClick={() => handleUpdateSubjectiveQuestion('subjective', Element._id, Element.question, Element.answer)} >UPDATE</button>\r\n\r\n                        </>\r\n                    ))\r\n                }\r\n            </><br></br><br></br>\r\n\r\n            <>\r\n                {\r\n                    questionAnswer?.questions?.logical?.length > 0 && (\r\n                        <div className=\"heading-objective\">Logical</div>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    questionAnswer?.questions?.logical?.map((Element, index) => (\r\n                        <>\r\n                            <textarea type=\"text\" className=\"testbox-textarea-logical-edit\" placeholder=\"Enter logical question\" defaultValue={Element.question} onChange={(e) => setQuestion(e.target.value)} />\r\n                            <textarea className=\"testbox-textarea\" type=\"text\" placeholder=\"Enter answer\" defaultValue={Element.answer} onChange={(e) => setAnswer(e.target.value)} />\r\n                            <button className=\"Update-btn\" onClick={() => delteQuestion('logical', Element._id)}>DELETE</button><button className=\"Update-btn\" onClick={() => updateLogicalQuestion('logical', Element._id, Element.question, Element.answer)} >UPDATE</button>\r\n                        </>\r\n                    ))\r\n\r\n                }\r\n            </>\r\n            <Toaster />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateQuestions"],"names":["UpdateQuestions","_questionAnswer$quest","_questionAnswer$quest2","_questionAnswer$quest3","_questionAnswer$quest4","_questionAnswer$quest5","_questionAnswer$quest6","_questionAnswer$quest7","_questionAnswer$quest8","_questionAnswer$quest9","_questionAnswer$quest10","_questionAnswer$quest11","_questionAnswer$quest12","navigate","useNavigate","configureChange","setConfigureSeriesChange","useState","questionAnswer","setQuestionAnswer","question","setQuestion","answer","setAnswer","correctAnswer","setCorrectAnswer","options","setOptions","series","localStorage","getItem","token","url","useEffect","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","concat","then","response","json","result","console","log","catch","error","delteQuestion","type","id","body","JSON","stringify","prev","toast","success","message","_jsxs","className","children","_jsx","onClick","handleBackClick","MdOutlineArrowBack","_Fragment","questions","objective","length","map","Element","index","_Element$options","_Element$options2","placeholder","defaultValue","onChange","e","target","value","option","handleOptionChange","newOptions","parseInt","_","_id","subjective","handleUpdateSubjectiveQuestion","questionType","qus","ans","duration","logical","updateLogicalQuestion","Toaster"],"sourceRoot":""}