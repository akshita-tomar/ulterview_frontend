{"version":3,"file":"static/js/868.99c4038a.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture = false) {\n  const handler = useEventCallback(listener);\n  useEffect(() => {\n    const target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return () => target.removeEventListener(event, handler, capture);\n  }, [eventTarget]);\n}","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  as = Anchor,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : as;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    // @ts-expect-error\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    // @ts-expect-error\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["useEventListener","eventTarget","event","listener","capture","arguments","length","undefined","handler","useEventCallback","useEffect","target","addEventListener","removeEventListener","WeakMap","_excluded","Anchor","React","_ref","ref","onKeyDown","props","source","excluded","key","i","sourceKeys","Object","keys","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","assign","tagName","handleKeyDown","e","href","trim","role","_jsx","displayName","_ref2","disabled","rel","onClick","tabIndex","type","meta","handleClick","isTrivialHref","preventDefault","stopPropagation","Button","as","asProp","Component","PageItem","active","className","style","activeLabel","children","linkStyle","linkClassName","classNames","_jsxs","createButton","name","defaultValue","label","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","concat","Item","striped","bordered","borderless","hover","variant","responsive","classes","table","responsiveClass","PACKET_TYPES","create","PACKET_TYPES_REVERSE","forEach","ERROR_PACKET","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","shift","j","slice","Emitter","mixin","on","fn","this","_callbacks","push","once","off","apply","removeListener","removeAllListeners","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","prev","seed","num","Math","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","join","empty","hasXHR2","responseType","Request","uri","method","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","decodePayload","encodedPayload","encodedPackets","decodedPacket","encodePayload","count","doWrite","request","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","_readyState","_len2","_key2","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","_this","ackTimeout","timer","_len3","_key3","withError","emitWithAck","_len4","_key4","reject","arg1","arg2","_this2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","_len6","_key6","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}