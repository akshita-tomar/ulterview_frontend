{"version":3,"file":"static/js/153.d3298aee.chunk.js","mappings":"sPAQA,MAwJA,EAxJyBA,KACrB,IAAI,GAAEC,IAAOC,EAAAA,EAAAA,KACTC,EAAQC,aAAaC,QAAQ,SACjC,MAAM,KAAEC,IAASC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAMC,iCACLC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAsBC,IAA2BJ,EAAAA,EAAAA,WAAS,IAC1DK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,KAClCO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,IAC1CS,EAAUC,IAAeV,EAAAA,EAAAA,UAAS,KAClCW,EAAyBC,IAA8BZ,EAAAA,EAAAA,WAAS,IAChEa,EAAYC,IAAiBd,EAAAA,EAAAA,UAAS,KAK7Ce,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBACjCF,EAAUE,OAAO,gBAAiB,UAAY7B,GAE9C,MAAM8B,EAAiB,CACnBC,OAAQ,MACRC,QAASL,EAETM,SAAU,UAGdC,MAAM,GAADC,OAAI5B,EAAG,iCAAA4B,OAAgCrC,GAAMgC,GAC7CM,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IAEH,GAAoB,YAAhBA,EAAOC,KAAoB,CAC3B3B,EAAU0B,EAAO3B,QACjB,IAAI6B,EAAYF,EAAOE,UAAUA,UACjCA,EAAYA,EAAUC,UACtBhC,EAAQ+B,EACZ,KAEHE,OAAOC,GAAUC,QAAQD,MAAMA,IAAO,GAC5C,CAAC1B,IAGJ,MAgBM4B,EAAuBC,IACzB,MAAMpB,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBACjCF,EAAUE,OAAO,gBAAiB,UAAU7B,GAE5C,MAKM8B,EAAiB,CACnBC,OAAQ,SACRC,QAASL,EACTqB,KARQC,KAAKC,UAAU,CACvB,SAAYpD,EACZ,WAAaiD,IAObd,SAAU,UAGdC,MAAM,GAADC,OAAI5B,EAAG,yBAAyBuB,GAChCM,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IAEc,YAAdA,EAAOC,OACPW,EAAAA,GAAMC,QAAQb,EAAOc,SACrBlC,GAAgBmC,GAAMA,EAAK,IAC9B,IAEHX,OAAOC,GAAUC,QAAQD,MAAMA,IAAO,EAmB/C,OACIW,EAAAA,EAAAA,MAAA,OAAKC,UAAS,WAAArB,OAAahC,EAAO,aAAe,GAAE,KAAIsD,SAAA,EACjDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAACC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,oBAAoBG,QAL9DC,KACdvD,EAAS,gBAAgB,EAIuEoD,SAAC,YAC7FC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UAC/BC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,eAAeG,QAnBnBE,KACtB9C,GAAwB,GACxBE,EAAYnB,EAAG,EAiBqD2D,SAAE,oBAElEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,qBAAoBC,SAAA,CAAC,wBAAsB7C,KAErDH,EAAKqD,KAAI,CAACC,EAAKC,KAEPT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oBAAoBS,MAAOF,EAAI3C,YAChDmC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,wBAAwBG,QAASA,IAvB1DO,EAAC9C,EAAU+C,KAC5B9C,EAAYD,GACZG,GAA2B,GAC3BN,EAAYnB,GACZ2B,EAAc0C,EAAY,EAmBuDD,CAAaH,EAAI3C,SAAU2C,EAAIK,KAAKX,SAAC,YAC9FC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,wBAAwBG,QAASA,KAAMU,OA3EjEC,EA2E8EP,EAAIK,SA1ElGG,IAAAA,KAAU,CACNC,MAAO,wCACPC,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClB1C,MAAMG,IACHA,EAAOwC,aACPjC,EAAoBwB,EACxB,IAZYA,KA2EuF,EAAAb,SAAC,mBAMhG3C,IACI4C,EAAAA,EAAAA,KAACsB,EAAAA,QAAkB,CACf7E,KAAMW,EACNmE,OAAQA,IAAMlE,GAAwB,GACtCC,SAAUA,EACVE,aAAcC,IAKtBG,IACIoC,EAAAA,EAAAA,KAACwB,EAAAA,QAAsB,CACnB/E,KAAMmB,EACN2D,OAAQA,IAAM1D,GAA2B,GACzCL,aAAcC,EACdH,SAAUA,EACVI,SAAUA,EACVI,WAAYA,KAIxBkC,EAAAA,EAAAA,KAACyB,EAAAA,GAAO,MACN,C,0FCxJd,MAgEA,EAhE4BC,IACxB,IAAIpF,EAAQC,aAAaC,QAAQ,SACjC,MACOkB,EAAUC,IAAeV,EAAAA,EAAAA,UAAS,IACnCb,EAAKsF,EAAMpE,SAoCjB,OACI0C,EAAAA,EAAAA,KAAA,OAAAD,UACIF,EAAAA,EAAAA,MAAC8B,EAAAA,EAAK,IACED,EACJE,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EAAA9B,SAAA,EAERC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMG,OAAM,CAACC,aAAW,EAAAhC,UACrBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMK,MAAK,CAAC5F,GAAG,iCAAiC0D,UAAU,UAASC,SAAC,oBAIzEC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMM,KAAI,CAAAlC,UACPC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,6CAA6CoC,YAAY,iBAAiB3B,MAAO7C,EAAUyE,SAAWC,GAAMzE,EAAYyE,EAAEC,OAAO9B,YAEtJP,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMW,OAAM,CAAAvC,UACTC,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAACtC,QAhDHuC,KACjB,MAAMvE,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBACjCF,EAAUE,OAAO,gBAAiB,UAAU7B,GAE5C,MAOM8B,EAAiB,CACnBC,OAAQ,OACRC,QAASL,EACTqB,KAVQC,KAAKC,UAAU,CACvB,iBAAoBpD,EACpB,SAAY,CACR,SAAYsB,KAQhBa,SAAU,UAGdC,MAAM,GAADC,OA1BG3B,gCA0BI,eAAesB,GACtBM,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IAEc,YAAdA,EAAOC,OACR4C,EAAMlE,cAAaoC,GAAMA,EAAK,IAC9B8B,EAAMH,QAAO,GACf,IAEHtC,OAAOC,GAAUC,QAAQD,MAAMA,IAAO,EAoBDa,SAAC,iBAGrC,C,0FC1Dd,MAgEA,EAhEgC2B,IAE5B,IAAIpF,EAAQC,aAAaC,QAAQ,SACjC,MAAOiG,EAAiBC,IAAsBzF,EAAAA,EAAAA,UAAS,IAqCvD,OACI+C,EAAAA,EAAAA,KAAA,OAAAD,UACIF,EAAAA,EAAAA,MAAC8B,EAAAA,EAAK,IACED,EACJE,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EAAA9B,SAAA,EAERC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMG,OAAM,CAACC,aAAW,EAAAhC,UACrBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMK,MAAK,CAAC5F,GAAG,iCAAiC0D,UAAU,UAASC,SAAC,uBAIzEC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMM,KAAI,CAAAlC,UACPC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,6CAA6CoC,YAAY,eAAeS,aAAcjB,EAAMhE,SAAUyE,SAAWC,GAAMM,EAAmBN,EAAEC,OAAO9B,YAExKP,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMW,OAAM,CAAAvC,UACTC,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAACtC,QAnDHuC,KACjB,MAAMvE,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBACjCF,EAAUE,OAAO,gBAAiB,UAAU7B,GAE5C,MAMM8B,EAAiB,CACrBC,OAAQ,MACRC,QAASL,EACTqB,KATUC,KAAKC,UAAU,CACzB,iBAAoBkC,EAAMpE,SAC1B,SAAYmF,GAAgCf,EAAMhE,SAClD,WAAcgE,EAAM5D,aAOpBS,SAAU,UAGZC,MAAM,GAADC,OAvBG3B,gCAuBI,kBAAkBsB,GAC3BM,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IAEY,YAAdA,EAAOC,OACN4C,EAAMlE,cAAaoC,GAAMA,EAAK,IAC9B8B,EAAMH,QAAO,GACjB,IAEDtC,OAAOC,GAAUC,QAAQD,MAAMA,IAAO,EAwBCa,SAAC,iBAGrC,C,mEClEd,MAAM6C,EAAY,CAAC,KAAM,YAOlB,SAASC,EAAcC,GAU3B,IAV4B,QAC7BC,EAAO,SACPC,EAAQ,KACRC,EAAI,OACJZ,EAAM,IACNa,EAAG,KACHC,EAAI,QACJlD,EAAO,SACPmD,EAAW,EAAC,KACZtE,GACDgE,EACMC,IAEDA,EADU,MAARE,GAA0B,MAAVZ,GAAyB,MAAPa,EAC1B,IAEA,UAGd,MAAMG,EAAO,CACXN,WAEF,GAAgB,WAAZA,EACF,MAAO,CAAC,CACNjE,KAAMA,GAAQ,SACdkE,YACCK,GAEL,MAAMC,EAAcC,KACdP,GAAwB,MAAZD,GA/Bb,SAAuBE,GAC5B,OAAQA,GAAwB,MAAhBA,EAAKO,MACvB,CA6BuCC,CAAcR,KAC/CM,EAAMG,iBAEJV,EACFO,EAAMI,kBAGG,MAAX1D,GAA2BA,EAAQsD,EAAM,EAe3C,MAPgB,MAAZR,IAEFE,IAASA,EAAO,KACZD,IACFC,OAAOW,IAGJ,CAAC,CACNT,KAAc,MAARA,EAAeA,EAAO,SAG5BH,cAAUY,EACVR,SAAUJ,OAAWY,EAAYR,EACjCH,OACAZ,OAAoB,MAAZU,EAAkBV,OAASuB,EACnC,gBAAkBZ,QAAWY,EAC7BV,IAAiB,MAAZH,EAAkBG,OAAMU,EAC7B3D,QAASqD,EACTO,UAxBoBN,IACF,MAAdA,EAAMO,MACRP,EAAMG,iBACNJ,EAAYC,GACd,GAqBCF,EACL,CACA,MAAMd,EAAsBwB,EAAAA,YAAiB,CAACC,EAAMC,KAClD,IACIC,GAAIC,EAAM,SACVnB,GACEgB,EACJtC,EA3EJ,SAAuC0C,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAAG,IAA2DN,EAAKQ,EAA5DjC,EAAS,CAAC,EAAOkC,EAAaC,OAAOC,KAAKL,GAAqB,IAAKE,EAAI,EAAGA,EAAIC,EAAWG,OAAQJ,IAAOR,EAAMS,EAAWD,GAAQD,EAASM,QAAQb,IAAQ,IAAazB,EAAOyB,GAAOM,EAAON,IAAQ,OAAOzB,CAAQ,CA2EtSuC,CAA8BZ,EAAMpB,GAC9C,MAAOiC,GACL9B,QAAS+B,IACNjC,EAAe2B,OAAOO,OAAO,CAChChC,QAASoB,EACTnB,YACCtB,IACH,OAAoB1B,EAAAA,EAAAA,KAAK8E,EAAWN,OAAOO,OAAO,CAAC,EAAGrD,EAAOmD,EAAa,CACxEZ,IAAKA,IACJ,IAEL1B,EAAOyC,YAAc,SACrB,S,gGCjFA,MAAMzC,EAAsBwB,EAAAA,YAAiB,CAAAC,EAS1CC,KAAQ,IATmC,GAC5CC,EAAE,SACFe,EAAQ,QACRC,EAAU,UAAS,KACnBtD,EAAI,OACJuD,GAAS,EAAK,SACdnC,GAAW,EAAK,UAChBlD,KACG4B,GACJsC,EACC,MAAMoB,GAASC,EAAAA,EAAAA,IAAmBJ,EAAU,QACrCJ,GAAa,QAClB9B,KACGF,EAAAA,EAAAA,IAAe,CAClBE,QAASmB,EACTlB,cACGtB,IAECoD,EAAY/B,EAClB,OAAoB/C,EAAAA,EAAAA,KAAK8E,EAAW,IAC/BD,KACAnD,EACHuC,IAAKA,EACLjB,SAAUA,EACVlD,UAAWwF,IAAWxF,EAAWsF,EAAQD,GAAU,SAAUD,GAAW,GAAJzG,OAAO2G,EAAM,KAAA3G,OAAIyG,GAAWtD,GAAQ,GAAJnD,OAAO2G,EAAM,KAAA3G,OAAImD,GAAQF,EAAMuB,MAAQD,GAAY,aACvJ,IAEJT,EAAOyC,YAAc,SACrB,S","sources":["components/hrScreening/HrRoundQuestions.js","components/hrScreening/addQuestionModal.js","components/hrScreening/updateQuestion.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useAppContext } from \"../../utils/useContext\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport AddHrRoundQuestion from \"./addQuestionModal\";\r\nimport UpdateHrRoundQuestions from \"./updateQuestion\";\r\nimport Swal from \"sweetalert2\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst HrRoundQuestions = () => {\r\n    let { id } = useParams()\r\n    let token = localStorage.getItem('token')\r\n    const { show } = useAppContext()\r\n    const navigate = useNavigate()\r\n    const url = process.env.REACT_APP_BACKEND_URL\r\n    const [data, setData] = useState([])\r\n    const [series, setSeries] = useState('')\r\n    const [showAddQuestionModal, setShowAddQuestionModal] = useState(false)\r\n    const [seriesId, setSeriesId] = useState('')\r\n    const [handleChange, setHandleChange] = useState(0)\r\n    const [question, setQuestion] = useState('')\r\n    const [showUpdateQuestionModal, setShowUpdateQuestionModal] = useState(false)\r\n    const [questionId, setQuestionId] = useState('')\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n            // body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}getHrRoundQuestions?seriesId=${id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                // console.log(result)\r\n                if (result.type === 'success') {\r\n                    setSeries(result.series)\r\n                    var questions = result.questions.questions\r\n                    questions = questions.reverse()\r\n                    setData(questions)\r\n                }\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }, [handleChange])\r\n\r\n\r\n    const handleDelete=(questionID)=>{\r\n        Swal.fire({\r\n            title: \"Are you sure to delete this Question?\",\r\n            text: \"You won't be able to revert this!\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#ce2128\",\r\n            cancelButtonColor: \"#333\",\r\n            confirmButtonText: \"Yes, delete it!\"\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                handleDeleteConfirm(questionID)\r\n            }\r\n          })\r\n    }\r\n\r\n    const handleDeleteConfirm = (quetionId) => {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \"+token);\r\n\r\n        const raw = JSON.stringify({\r\n            \"seriesId\": id,\r\n            \"questionId\":quetionId\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"DELETE\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}deleteHrRoundQuestion`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                // console.log(result)\r\n                if(result.type==='success'){\r\n                   toast.success(result.message)\r\n                   setHandleChange(prev=>prev+1)\r\n                }\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n\r\n    const handleAddQuestion = () => {\r\n        setShowAddQuestionModal(true)\r\n        setSeriesId(id)\r\n    }\r\n\r\n    const handleUpdate = (question, questionIdD) => {\r\n        setQuestion(question)\r\n        setShowUpdateQuestionModal(true)\r\n        setSeriesId(id)\r\n        setQuestionId(questionIdD)\r\n    }\r\n\r\n    const handleBack =()=>{\r\n        navigate('/hr-screening')\r\n    }\r\n    return (\r\n        <div className={`wrapper ${show ? \"cmn_margin\" : \"\"} `}>\r\n              <div className=\"back-btn-outer\"><button className=\"back-btn-checkans\" onClick={handleBack}>back</button></div>\r\n            <div className=\"text-end mb-3 pe-3\">\r\n                <button className=\"register-btn\" onClick={handleAddQuestion} >Add question</button>\r\n            </div>\r\n            <h4 className=\"hrRound-seriesname\">Set of questions for {series}</h4>\r\n            {\r\n                data.map((ele, index) => {\r\n                    return (\r\n                        <div className=\"hr-question-outer\">\r\n                            <input className=\"hr-question-input\" value={ele.question} />\r\n                            <div className=\"hrQuestion-update-delete-btn\">\r\n                                <button className=\"hrQuestion-update-btn\" onClick={() => handleUpdate(ele.question, ele._id)}>Update</button>\r\n                                <button className=\"hrQuestion-delete-btn\" onClick={() => handleDelete(ele._id)}>Delete</button></div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                showAddQuestionModal && (\r\n                    <AddHrRoundQuestion\r\n                        show={showAddQuestionModal}\r\n                        onHide={() => setShowAddQuestionModal(false)}\r\n                        seriesId={seriesId}\r\n                        handleChange={setHandleChange}\r\n                    />\r\n                )\r\n            }\r\n            {\r\n                showUpdateQuestionModal && (\r\n                    <UpdateHrRoundQuestions\r\n                        show={showUpdateQuestionModal}\r\n                        onHide={() => setShowUpdateQuestionModal(false)}\r\n                        handleChange={setHandleChange}\r\n                        seriesId={seriesId}\r\n                        question={question}\r\n                        questionId={questionId}\r\n                    />\r\n                )\r\n            }\r\n            <Toaster/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HrRoundQuestions","import { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst AddHrRoundQuestion = (props) => {\r\n    let token = localStorage.getItem('token')\r\n    const url = process.env.REACT_APP_BACKEND_URL\r\n    const [question, setQuestion] = useState('')\r\n    const id = props.seriesId\r\n\r\n\r\n   \r\n\r\n    const handleSubmit = () => {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \"+token);\r\n\r\n        const raw = JSON.stringify({\r\n            \"questionSeriesId\": id,\r\n            \"question\": {\r\n                \"question\": question\r\n            }\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}addQuestion`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                // console.log(result)\r\n                if(result.type==='success'){\r\n                  props.handleChange(prev=>prev+1) \r\n                  props.onHide(false)\r\n                }\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                {...props}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter \" className=\"heading\">\r\n                        Add Question\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <input className=\"candidate-register-input form-control mt-2\" placeholder=\"Enter question\" value={question} onChange={(e) => setQuestion(e.target.value)} ></input>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleSubmit}>Submit</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddHrRoundQuestion","import { updateData } from '@syncfusion/ej2-react-grids';\r\nimport { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nconst UpdateHrRoundQuestions = (props) => {\r\n    const url = process.env.REACT_APP_BACKEND_URL\r\n    let token = localStorage.getItem('token')\r\n    const [updatedQuestion, setUpdatedQuestion] = useState('')\r\n\r\n\r\n    const handleSubmit = () => {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \"+token);\r\n        \r\n        const raw = JSON.stringify({\r\n          \"questionSeriesId\": props.seriesId,\r\n          \"question\": updatedQuestion?updatedQuestion:props.question,\r\n          \"questionId\": props.questionId\r\n        });\r\n        \r\n        const requestOptions = {\r\n          method: \"PUT\",\r\n          headers: myHeaders,\r\n          body: raw,\r\n          redirect: \"follow\"\r\n        };\r\n        \r\n        fetch(`${url}updateQuesiton`, requestOptions)\r\n          .then((response) => response.json())\r\n          .then((result) => {\r\n            // console.log(result)\r\n            if(result.type==='success'){\r\n                props.handleChange(prev=>prev+1)\r\n                props.onHide(false) \r\n            }\r\n          })\r\n          .catch((error) => console.error(error));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                {...props}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter \" className=\"heading\">\r\n                        Update Question\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <input className=\"candidate-register-input form-control mt-2\" placeholder=\"Enter series\" defaultValue={props.question} onChange={(e) => setUpdatedQuestion(e.target.value)}></input>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleSubmit}>Submit</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateHrRoundQuestions","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["HrRoundQuestions","id","useParams","token","localStorage","getItem","show","useAppContext","navigate","useNavigate","url","process","data","setData","useState","series","setSeries","showAddQuestionModal","setShowAddQuestionModal","seriesId","setSeriesId","handleChange","setHandleChange","question","setQuestion","showUpdateQuestionModal","setShowUpdateQuestionModal","questionId","setQuestionId","useEffect","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","concat","then","response","json","result","type","questions","reverse","catch","error","console","handleDeleteConfirm","quetionId","body","JSON","stringify","toast","success","message","prev","_jsxs","className","children","_jsx","onClick","handleBack","handleAddQuestion","map","ele","index","value","handleUpdate","questionIdD","_id","handleDelete","questionID","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","AddHrRoundQuestion","onHide","UpdateHrRoundQuestions","Toaster","props","Modal","size","centered","Header","closeButton","Title","Body","placeholder","onChange","e","target","Footer","Button","handleSubmit","updatedQuestion","setUpdatedQuestion","defaultValue","_excluded","useButtonProps","_ref2","tagName","disabled","href","rel","role","tabIndex","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","React","_ref","ref","as","asProp","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","variant","active","prefix","useBootstrapPrefix","classNames"],"sourceRoot":""}