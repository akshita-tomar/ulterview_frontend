{"version":3,"file":"static/js/164.f8ed2647.chunk.js","mappings":"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","sources":["components/homepage/homepage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAsyncError, useNavigate } from \"react-router-dom\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { MdEdit, MdDelete } from \"react-icons/md\";\r\nimport swal from \"sweetalert\";\r\nimport { RiUserStarFill } from \"react-icons/ri\";\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n  const [languages, setLanguages] = useState([]);\r\n  const [showLanguageModal, setShowLanguageModal] = useState(false);\r\n  const [showAddlanguageModal, setShowAddlanguageModal] = useState(false)\r\n  const [newlanguage, setNewLanguage] = useState('')\r\n  const [showseries, setShowSeries] = useState(false)\r\n  const [seriesOptions, setSeriesOptions] = useState([])\r\n  const [series, setSeries] = useState('')\r\n  const [showcreteTasksection, setShowcreteTasksection] = useState(false)\r\n  const [configurechange, setconfigureChange] = useState(0)\r\n  const [showEditBox, setshowEditBox] = useState(false)\r\n  const [languageId, setLanguageId] = useState('')\r\n  const [holdLanguage, setHoldLanguage] = useState('')\r\n  const [openAddnewseriesModal, setopenAddnewseriesModal] = useState(false)\r\n  const [holdNewSeries, setHoldNewSeries] = useState('')\r\n  const [configureSeriesChange, setConfigureSeriesChange] = useState(0)\r\n  const [openEditseriesModal, setOpenEditseriesModal] = useState(false)\r\n  const [seriesId, setSeriesId] = useState('')\r\n  const [updatedSeries,setUpdatedSeries]=useState('')\r\n  const navigate = useNavigate();\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let token = localStorage.getItem('token')\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/api/v1/getAllSeries\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result)\r\n        if (result.type === 'success') {\r\n          setSeriesOptions(result.allSeries)\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, [configureSeriesChange])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchLanguages()\r\n  }, [configurechange])\r\n\r\n\r\n\r\n\r\n  const fetchLanguages = () => {\r\n    let token = localStorage.getItem('token')\r\n    if (!token) {\r\n      navigate('/');\r\n    }\r\n    setSeries('')\r\n    setShowcreteTasksection(true)\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/api/v1/getAllLanguages\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setLanguages(result.data);\r\n        setShowLanguageModal(true);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n\r\n\r\n\r\n  const addLanguages = async (e) => {\r\n    e.preventDefault();\r\n    let token = localStorage.getItem('token')\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const raw = JSON.stringify({\r\n      \"language\": newlanguage\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/api/v1/addLanguage\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result)\r\n        if (result.type === 'error') {\r\n          toast.error(result.message, {\r\n            duration: 1000\r\n          })\r\n        } else {\r\n          setShowAddlanguageModal(false)\r\n          fetchLanguages();\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleLanguageClick = (language) => {\r\n    let mylanguage = language\r\n    localStorage.setItem(\"language\", language)\r\n\r\n    let token = localStorage.getItem('token')\r\n    if (!token) {\r\n      navigate('/')\r\n    }\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const raw = JSON.stringify({\r\n      \"language\": mylanguage\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/api/v1/UpdateUserLanguage\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n\r\n        if (result.type === 'error') {\r\n          toast.error(result.message)\r\n        } else {\r\n          setShowLanguageModal(false);\r\n          setShowSeries(true)\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteLanguage = (id) => {\r\n    console.log(\"id--->\", id)\r\n    let token = localStorage.getItem('token')\r\n    if (!token) {\r\n      navigate('/')\r\n    }\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`http://localhost:8000/api/v1/deleteLanguage?languageId=${id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result)\r\n        if (result.type === 'error') {\r\n          toast.error(result.message)\r\n        } else {\r\n          setconfigureChange((prev) => prev + 1)\r\n          swal(\"language deleted successfully!\", \"\", \"success\");\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n\r\n\r\n  let token = localStorage.getItem('token')\r\n  const updateLanguage = () => {\r\n\r\n    if (!token) {\r\n      navigate('/')\r\n    }\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const raw = JSON.stringify({\r\n      \"language\": holdLanguage\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`http://localhost:8000/api/v1/updateLanguage?languageId=${languageId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result)\r\n        if (result.type === 'error') {\r\n          toast.error(result.message)\r\n        } else {\r\n          toast.success(result.message)\r\n          setshowEditBox(false)\r\n          setconfigureChange(prev => prev + 1)\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n\r\n\r\n  const handleEditLanguage = (id, language) => {\r\n    setHoldLanguage(language)\r\n    setLanguageId(id)\r\n    setshowEditBox(true)\r\n    setShowLanguageModal(false)\r\n  }\r\n\r\n\r\n\r\n  const handleAddNewLanguage = () => {\r\n    setShowLanguageModal(false)\r\n    setShowAddlanguageModal(true)\r\n  }\r\n\r\n  const closeAddlanguageModal = () => {\r\n    setShowAddlanguageModal(false)\r\n    setShowLanguageModal(true)\r\n\r\n  }\r\n\r\n  const showQuestion = (seriesId) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`http://localhost:8000/api/v1/getSeries?seriesId=${seriesId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result)\r\n        if (result.type === 'success') {\r\n          localStorage.setItem('series', result.series.seriesName)\r\n          localStorage.setItem('seriesId', result.series._id)\r\n          setSeries(result.series.seriesName);\r\n          setShowSeries(false);\r\n          setShowLanguageModal(false);\r\n          navigate('/create-task')\r\n\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n\r\n\r\n\r\n  const AddNewSeries = (e) => {\r\n    e.preventDefault()\r\n    let token = localStorage.getItem('token')\r\n    if (!token) {\r\n      navigate('/')\r\n    }\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const raw = JSON.stringify({\r\n      \"seriesName\": holdNewSeries\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/api/v1/createSeries\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result)\r\n        if (result.type === 'success') {\r\n          setConfigureSeriesChange(prev => prev + 1)\r\n          setopenAddnewseriesModal(false)\r\n        }\r\n\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n\r\n\r\n  const delteSeries = (id, seriesName) => {\r\n    let token = localStorage.getItem('token')\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`http://localhost:8000/api/v1/deleteSeries?seriesId=${id}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result)\r\n        setConfigureSeriesChange(prev => prev + 1)\r\n        swal(seriesName + \" deleted successfully!\", \"\", \"success\");\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n\r\n\r\n  const AddEditSeries = () => {\r\n    console.log(\"series id -----\",seriesId)\r\n    let token = localStorage.getItem('token')\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n    const raw = JSON.stringify({\r\n      \"updatedSeries\": updatedSeries\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(`http://localhost:8000/api/v1/updateSeries?updateSeriesId=${seriesId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result)\r\n        if (result.type === 'success') {\r\n          console.log('here--', result)\r\n          setConfigureSeriesChange(prev => prev + 1)\r\n          setOpenEditseriesModal(false)\r\n          // toast.success(result.message)\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n\r\n  const handleEditSeries = (seriesName, seriesId) => {\r\n    // setShowSeries(false)\r\n    console.log('series name ------', seriesName)\r\n    setSeriesId(seriesId)\r\n    setSeries(seriesName)\r\n    setOpenEditseriesModal(true)\r\n  }\r\n\r\n  const handleCloseEditSeries = () => {\r\n    setOpenEditseriesModal(false)\r\n  }\r\n\r\n\r\n\r\n  const closeseries = () => {\r\n    setShowSeries(false)\r\n    setShowLanguageModal(true)\r\n  }\r\n\r\n  const closeAddlanguageModal2 = () => {\r\n    setshowEditBox(false)\r\n    setShowLanguageModal(true)\r\n  }\r\n\r\n  const openAddseries = () => {\r\n    // setShowSeries(false)\r\n    setopenAddnewseriesModal(true)\r\n\r\n  }\r\n\r\n  const handlecloseAddseriesModal = () => {\r\n    setopenAddnewseriesModal(false)\r\n  }\r\n\r\n  const AddSeries = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sidebar\">\r\n        <button className=\"sidebar-button\" onClick={fetchLanguages}>Questionnaire</button>\r\n        <Toaster />\r\n      </div>\r\n      {\r\n        showcreteTasksection && (\r\n          <>\r\n\r\n            {showLanguageModal && (\r\n              <>\r\n                {/* <div className=\"chooselanguage-heading-sidebar\">Select language to create task</div> */}\r\n                <div className=\"language-modal\">\r\n                  {languages.map((language) => (\r\n\r\n                    <div key={language.id} className=\"language-card\">\r\n                      <div className=\"card-inner\"><MdEdit onClick={() => handleEditLanguage(language._id, language.language)} /> <MdDelete onClick={() => handleDeleteLanguage(language._id)} /> </div>\r\n                      <div className=\"text-space\" onClick={() => handleLanguageClick(language.language)}> {language.language}</div>\r\n                    </div>\r\n                  ))}\r\n                  <button className=\"add-more-languages-btn\" onClick={handleAddNewLanguage}>Add new</button>\r\n                </div>\r\n              </>\r\n            )}\r\n            {\r\n              showAddlanguageModal && (\r\n                <div className=\"modal-overlay\">\r\n                  <div className=\"modal\">\r\n                    <div><h3>Add another language</h3></div>\r\n                    <div className=\"cross-sign\" onClick={closeAddlanguageModal}>  &#10005;</div>\r\n\r\n                    <div className=\"input-field\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"language\"\r\n                        onChange={event => setNewLanguage(event.target.value)}\r\n                      />\r\n                      <button onClick={addLanguages}>Add</button>\r\n                    </div>\r\n                    <Toaster />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            {/* ******* */}\r\n            {showseries && (\r\n              <div className=\"series-modal-overlay\">\r\n                <div className=\"series-modal\">\r\n                  <div className=\"close-series\" onClick={closeseries}> &#10005;</div>\r\n                  <div className=\"modal-header\">\r\n                    <h3>Select Series</h3>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    <div className=\"series-option-new\" onClick={openAddseries} >Add new series</div>\r\n                    {seriesOptions.map((series, index) => (\r\n                      <>\r\n                        <div className=\"series-outer-box\">\r\n                          <MdEdit onClick={() => handleEditSeries(series.seriesName, series._id)} /> <MdDelete onClick={() => delteSeries(series._id, series.seriesName)} />\r\n                          <div key={index} className=\"series-option\" onClick={() => showQuestion(series._id)}> {series.seriesName}</div>\r\n                        </div> <br></br></>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {\r\n              openAddnewseriesModal && (\r\n                <div className=\"modal-overlay\">\r\n                  <div className=\"modal\">\r\n                    <div><h3>Add Series</h3></div>\r\n                    <div className=\"cross-sign\" onClick={handlecloseAddseriesModal}>  &#10005;</div>\r\n\r\n                    <div className=\"input-field\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter new series\"\r\n                        onChange={event => setHoldNewSeries(event.target.value)}\r\n                      />\r\n                      <button onClick={AddNewSeries} >Add</button>\r\n                    </div>\r\n                    <Toaster />\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n            {\r\n              openEditseriesModal && (\r\n                <div className=\"modal-overlay\">\r\n                  <div className=\"modal\">\r\n                    <div><h3>Edit Series</h3></div>\r\n                    <div className=\"cross-sign\" onClick={handleCloseEditSeries} >  &#10005;</div>\r\n\r\n                    <div className=\"input-field\">\r\n                      <input\r\n                        defaultValue={series}\r\n                        type=\"text\"\r\n                      // placeholder=\"Edit series\"\r\n                      onChange={event => setUpdatedSeries(event.target.value)}\r\n                      />\r\n                      <button onClick={AddEditSeries} >Add</button>\r\n                    </div>\r\n                    <Toaster />\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n\r\n            {/* ********* */}\r\n            {\r\n              showEditBox && (\r\n                <div className=\"modal-overlay\">\r\n                  <div className=\"modal\">\r\n                    <div><h3>Update language</h3></div>\r\n                    <div className=\"cross-sign\" onClick={closeAddlanguageModal2}>  &#10005;</div>\r\n\r\n                    <div className=\"input-field\">\r\n                      <input\r\n                        defaultValue={holdLanguage}\r\n                        type=\"text\"\r\n                        placeholder=\"language\"\r\n                        onChange={event => setHoldLanguage(event.target.value)}\r\n                      />\r\n                      <button onClick={updateLanguage}>Add</button>\r\n                    </div>\r\n                    <Toaster />\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n\r\n          </>)}\r\n\r\n    </>\r\n\r\n  );\r\n}\r\nexport default HomePage;\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["HomePage","languages","setLanguages","useState","showLanguageModal","setShowLanguageModal","showAddlanguageModal","setShowAddlanguageModal","newlanguage","setNewLanguage","showseries","setShowSeries","seriesOptions","setSeriesOptions","series","setSeries","showcreteTasksection","setShowcreteTasksection","configurechange","setconfigureChange","showEditBox","setshowEditBox","languageId","setLanguageId","holdLanguage","setHoldLanguage","openAddnewseriesModal","setopenAddnewseriesModal","holdNewSeries","setHoldNewSeries","configureSeriesChange","setConfigureSeriesChange","openEditseriesModal","setOpenEditseriesModal","seriesId","setSeriesId","updatedSeries","setUpdatedSeries","navigate","useNavigate","useEffect","token","localStorage","getItem","myHeaders","Headers","append","fetch","method","headers","redirect","then","response","json","result","console","log","type","allSeries","catch","error","fetchLanguages","data","_jsxs","_Fragment","children","className","_jsx","onClick","Toaster","map","language","MdEdit","handleEditLanguage","id","_id","MdDelete","requestOptions","concat","toast","message","prev","swal","handleDeleteLanguage","mylanguage","setItem","raw","JSON","stringify","body","handleLanguageClick","handleAddNewLanguage","closeAddlanguageModal","placeholder","onChange","event","target","value","async","e","preventDefault","duration","closeseries","openAddseries","index","handleEditSeries","seriesName","delteSeries","showQuestion","handlecloseAddseriesModal","handleCloseEditSeries","defaultValue","AddEditSeries","closeAddlanguageModal2","updateLanguage","success"],"sourceRoot":""}