{"version":3,"file":"static/js/642.4bb3dabe.chunk.js","mappings":"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","sources":["components/updateQuestions/updateQuestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { MdOutlineArrowBack } from \"react-icons/md\"\r\n\r\nconst UpdateQuestions = () => {\r\n    const navigate = useNavigate()\r\n    const [configureChange, setConfigureSeriesChange] = useState(0)\r\n    const [questionAnswer, setQuestionAnswer] = useState([])\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n    const [correctAnswer,setCorrectAnswer]=useState()\r\n    const [options, setOptions] = useState([\"\", \"\", \"\", \"\"]);\r\n    let series = localStorage.getItem('seriesId')\r\n    let token = localStorage.getItem('token')\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if (!token) {\r\n            navigate('/')\r\n        }\r\n\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n\r\n\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\"\r\n        };\r\n        fetch(`http://localhost:8000/api/v1/getQuestionsSeriesWise?seriesId=${series}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                // if (result.type === 'error') {\r\n                //     console.log(result.message)\r\n                //     // toast.error(result.message)\r\n                // } else {\r\n                setQuestionAnswer(result)\r\n               \r\n                // }\r\n            })\r\n            .catch((error) => console.error(error));\r\n\r\n    }, [series, configureChange])\r\n\r\nconsole.log(\"questions ---\",questionAnswer)\r\n\r\n\r\n\r\n    const delteQuestion = (type, id) => {\r\n        console.log('type___-', type)\r\n        console.log('id___', id)\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const raw = JSON.stringify({\r\n            \"questionType\": type\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"DELETE\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`http://localhost:8000/api/v1/DeleteQuestionAnswer?questionId=${id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                // if (result.type === 'success') {\r\n                setConfigureSeriesChange(prev => prev + 1)\r\n                toast.success(result.message)\r\n\r\n                // }\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleUpdateQuestion = (questionType,id,qus,ans) => {\r\n\r\n       console.log(\"updatedQuestion ----\",qus, \"answer----\",ans)\r\n\r\n            setTimeout(() => {\r\n                console.log(questionType,id)\r\n                const myHeaders = new Headers();\r\n                myHeaders.append(\"Content-Type\", \"application/json\");\r\n                myHeaders.append(\"Authorization\", \"Bearer \"+token);\r\n        \r\n                const raw = JSON.stringify({\r\n                    \"questionType\": questionType,\r\n                    \"answer\": answer ? answer : ans,\r\n                    \"question\": question ? question : qus,\r\n                    \"options\":options,\r\n                    \"correctAnswer\":correctAnswer\r\n                });\r\n        \r\n                const requestOptions = {\r\n                    method: \"PUT\",\r\n                    headers: myHeaders,\r\n                    body: raw,\r\n                    redirect: \"follow\"\r\n                };\r\n        \r\n                fetch(`http://localhost:8000/api/v1/updateQuestionAnswer?questionId=${id}`, requestOptions)\r\n                    .then((response) => response.json())\r\n                    .then((result) => {\r\n                        console.log(result)\r\n                        if(result.type==='success'){\r\n                            setConfigureSeriesChange(prev=>prev+1)\r\n                            setQuestion('')\r\n                            setAnswer('')\r\n                            setCorrectAnswer()\r\n                            setOptions([\"\", \"\", \"\", \"\"])\r\n                            toast.success(result.message,{\r\n                                duration:1000\r\n                            })\r\n        \r\n                        }\r\n                    })\r\n                    .catch((error) => console.error(error));\r\n            }, 500);\r\n    }\r\n\r\n\r\n    const handleOptionChange = (index, value) => {\r\n        const newOptions = [...options];\r\n        newOptions[index] = value;\r\n        setOptions(newOptions);\r\n      };\r\n    \r\n\r\n\r\n    const handleBackClick = () => {\r\n        navigate('/create-task')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"outer-edit-question-div\">\r\n            <div className=\"back-btn\" onClick={handleBackClick}>< MdOutlineArrowBack /></div>\r\n            <>\r\n                {\r\n                    questionAnswer?.questions?.objective?.length > 0 && (\r\n                        <div className=\"heading-objective\">Objective</div>\r\n                    )\r\n                }\r\n\r\n                {questionAnswer?.questions?.objective?.map((Element, index) => (\r\n                    <>\r\n                        <input className=\"mcq-question-edit\" type=\"text\" placeholder=\"Enter question\" defaultValue={Element.question} onChange={(e) => setQuestion(e.target.value)} />\r\n                        {Element?.options?.map((option, index) => (\r\n                        //    console.log(\"optioen----\",option)\r\n                           <input className=\"mcq-options\" key={index} type=\"text\" placeholder={`Option ${index + 1}`} defaultValue={option} onChange={(e) => handleOptionChange(index, e.target.value)} />\r\n                        ))}\r\n                        <label>Select correct answer:</label>\r\n                        <select defaultValue={Element.correctAnswer}  onChange={(e) => setCorrectAnswer(parseInt(e.target.value))} >\r\n                            {Element?.options?.map((_, index) => (\r\n                                <option key={index} value={index + 1}>{index + 1}</option>\r\n                            ))}\r\n                        </select>\r\n                        <button className=\"Update-btn\" onClick={() => delteQuestion('objective', Element._id)}>DELETE</button><button className=\"Update-btn\" onClick={() => handleUpdateQuestion('objective', Element._id)} >UPDATE</button>\r\n                    </>\r\n                ))}\r\n            </> <br></br>\r\n\r\n            <>\r\n                {\r\n                    questionAnswer?.questions?.subjective?.length > 0 && (\r\n                        <div className=\"heading-objective\">Subjective</div>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    questionAnswer?.questions?.subjective?.map((Element, index) => (\r\n                        <>\r\n                        console.log(\"subjective----\",{Element.answer})\r\n                            <input className='mcq-question-edit' type=\"text\" placeholder=\"Enter subjective question\" defaultValue={Element.question} onChange={(e) => setQuestion(e.target.value)} />\r\n                            <textarea className=\"testbox-textarea\" type=\"text\" placeholder=\"Enter answer\" defaultValue={Element.answer} onChange={(e)=>setAnswer(e.target.value)} />\r\n                            <button className=\"Update-btn\" onClick={() => delteQuestion('subjective', Element._id)} >DELETE</button><button className=\"Update-btn\" onClick={() => handleUpdateQuestion('subjective', Element._id,Element.question,Element.answer)} >UPDATE</button>\r\n\r\n                        </>\r\n                    ))\r\n                }\r\n         </><br></br><br></br>\r\n\r\n            <>\r\n                {\r\n                    questionAnswer?.questions?.logical?.length > 0 && (\r\n                        <div className=\"heading-objective\">Logical</div>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    questionAnswer?.questions?.logical?.map((Element, index) => (\r\n                        <>\r\n                            <textarea type=\"text\" className=\"testbox-textarea-logical-edit\" placeholder=\"Enter logical question\" defaultValue={Element.question} onChange={(e) => setQuestion(e.target.value)} />\r\n                            <textarea className=\"testbox-textarea\" type=\"text\" placeholder=\"Enter answer\" defaultValue={Element.answer} onChange={(e)=>setAnswer(e.target.value)} />\r\n                            <button className=\"Update-btn\" onClick={() => delteQuestion('logical', Element._id)}>DELETE</button><button className=\"Update-btn\" onClick={() => handleUpdateQuestion('logical', Element._id)} >UPDATE</button>\r\n                        </>\r\n                    ))\r\n\r\n                }\r\n            </>\r\n            <Toaster />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateQuestions"],"names":["UpdateQuestions","_questionAnswer$quest","_questionAnswer$quest2","_questionAnswer$quest3","_questionAnswer$quest4","_questionAnswer$quest5","_questionAnswer$quest6","_questionAnswer$quest7","_questionAnswer$quest8","_questionAnswer$quest9","_questionAnswer$quest10","_questionAnswer$quest11","_questionAnswer$quest12","navigate","useNavigate","configureChange","setConfigureSeriesChange","useState","questionAnswer","setQuestionAnswer","question","setQuestion","answer","setAnswer","correctAnswer","setCorrectAnswer","options","setOptions","series","localStorage","getItem","token","useEffect","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","concat","then","response","json","result","console","log","catch","error","delteQuestion","type","id","body","JSON","stringify","prev","toast","success","message","handleUpdateQuestion","questionType","qus","ans","setTimeout","duration","_jsxs","className","children","_jsx","onClick","handleBackClick","MdOutlineArrowBack","_Fragment","questions","objective","length","map","Element","index","_Element$options","_Element$options2","placeholder","defaultValue","onChange","e","target","value","option","handleOptionChange","newOptions","parseInt","_","_id","subjective","logical","Toaster"],"sourceRoot":""}