{"version":3,"file":"static/js/642.9cafa8b7.chunk.js","mappings":"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","sources":["components/updateQuestions/updateQuestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport toast, { Toaster } from 'react-hot-toast'\r\nimport swal from \"sweetalert\";\r\nimport Swal from 'sweetalert2'\r\nimport { useAppContext } from \"../../utils/useContext\";\r\n\r\nconst UpdateQuestions = () => {\r\n    const navigate = useNavigate()\r\n    const [configureChange, setConfigureSeriesChange] = useState(0)\r\n    const [questionAnswer, setQuestionAnswer] = useState([])\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n    const [correctAnswer, setCorrectAnswer] = useState()\r\n    const [options, setOptions] = useState([\"\", \"\", \"\", \"\"]);\r\n    const [showobjective, setShowObjective] = useState(true)\r\n    const [showsubjective, setShowsubjective] = useState(false)\r\n    const [showLogical, setShowLogical] = useState(false)\r\n    let series = localStorage.getItem('seriesId')\r\n    let token = localStorage.getItem('token')\r\n    const url = process.env.REACT_APP_BACKEND_URL\r\n\r\n\r\n    useEffect(() => {\r\n        if (!token) {\r\n            navigate('/')\r\n        }\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\"\r\n        };\r\n        fetch(`${url}getQuestionsSeriesWise?seriesId=${series}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                // console.log(\"result -----\", result)\r\n                if (result.message === 'No questions found') {\r\n                    swal('This series is empty for now. You can add questions!', 'Thanks!', 'success')\r\n                }\r\n                setQuestionAnswer(result)\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }, [series, configureChange])\r\n\r\n  \r\n\r\n    const delteQuestion = (type, id) => {\r\n\r\n        Swal.fire({\r\n            title: \"Are you sure to delete this Question?\",\r\n            text: \"You won't be able to revert this!\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#ce2128\",\r\n            cancelButtonColor: \"#333\",\r\n            confirmButtonText: \"Yes, delete it!\"\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              handleDeleteConfirm(type, id);\r\n            }\r\n          });\r\n    }\r\n\r\n\r\n\r\n    const handleDeleteConfirm=(type, id)=>{\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const raw = JSON.stringify({\r\n            \"questionType\": type\r\n        });\r\n        const requestOptions = {\r\n            method: \"DELETE\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}DeleteQuestionAnswer?questionId=${id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                // console.log(result)\r\n                setConfigureSeriesChange(prev => prev + 1)\r\n                toast.success('Document delted successfully.')\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n\r\n    const handleUpdateSubjectiveQuestion = (questionType, id, qus, ans) => {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const raw = JSON.stringify({\r\n            \"questionType\": questionType,\r\n            \"answer\": answer ? answer : ans,\r\n            \"question\": question ? question : qus,\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}updateQuestionAnswer?questionId=${id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                // console.log(result)\r\n                if (result.type === 'success') {\r\n                    setConfigureSeriesChange(prev => prev + 1)\r\n                    setQuestion('')\r\n                    setAnswer('')\r\n                    setCorrectAnswer()\r\n                    setOptions([\"\", \"\", \"\", \"\"])\r\n                    toast.success('Document updated successfully.', {\r\n                        duration: 1000\r\n                    })}\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n\r\n\r\n    const updateLogicalQuestion = (questionType, id, qus, ans) => {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const raw = JSON.stringify({\r\n            \"questionType\": questionType,\r\n            \"answer\": answer ? answer : ans,\r\n            \"question\": question ? question : qus,\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}updateQuestionAnswer?questionId=${id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                // console.log(result)\r\n                if (result.type === 'success') {\r\n                    setConfigureSeriesChange(prev => prev + 1)\r\n                    setQuestion('')\r\n                    setAnswer('')\r\n                    setCorrectAnswer()\r\n                    setOptions([\"\", \"\", \"\", \"\"])\r\n                    toast.success('Doucument updated successfully.', {\r\n                        duration: 1000\r\n                    })}\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n\r\n\r\n    const updateObjectiveQuestion = (questionType, id, ques, optns, corrAns) => {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const filteredOptions = options.filter(option => option.trim() !== \"\");\r\n\r\n        const raw = JSON.stringify({\r\n            \"questionType\": questionType,\r\n            \"question\": question ? question : ques,\r\n            \"options\": filteredOptions.length > 0 ? filteredOptions : optns,\r\n            \"correctAnswer\": correctAnswer ? correctAnswer : corrAns\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}updateQuestionAnswer?questionId=${id}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                // console.log(result)\r\n                if (result.type === 'success') {\r\n                    setConfigureSeriesChange(prev => prev + 1)\r\n                    setQuestion('')\r\n                    setAnswer('')\r\n                    setCorrectAnswer()\r\n                    setOptions([\"\", \"\", \"\", \"\"])\r\n                    toast.success('Document updated successfully.', {\r\n                        duration: 1000\r\n                    })\r\n                } else {\r\n                    toast.error(result.message) }\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleOptionChange = (index, value, prevOpts) => {\r\n        prevOpts[index] = value;\r\n        // console.log(\"prev updted options ---\", prevOpts)\r\n        setOptions(prevOpts);\r\n    }\r\n\r\n    const handleShowobjective = () => {\r\n        localStorage.setItem('questionType', 'mcq')\r\n        setShowsubjective(false)\r\n        setShowLogical(false)\r\n        setShowObjective(true)\r\n    }\r\n\r\n    const handleShowSubjective = () => {\r\n        localStorage.setItem('questionType', 'subjective')\r\n        setShowLogical(false)\r\n        setShowObjective(false)\r\n        setShowsubjective(true)\r\n    }\r\n\r\n    const handleShowLogical = () => {\r\n        localStorage.setItem('questionType', 'logical')\r\n        setShowObjective(false)\r\n        setShowsubjective(false)\r\n        setShowLogical(true)\r\n    }\r\n\r\n    const handleAddQyestion = () => {\r\n        navigate('/create-task')\r\n    }\r\n\r\n    const{show}=useAppContext()\r\n    \r\n    return (\r\n        <div className={`wrapper ${show ? \"cmn_margin\":\"\"}`}>\r\n            <div className=\"cmn_container\">\r\n            <>\r\n         \r\n                <div className=\"add_question_wrapper\">\r\n                <h1 className=\"heading\">{localStorage.getItem('series')} ({localStorage.getItem('language')}) </h1>  <button className=\"edit-series-button\" onClick={() => handleAddQyestion()}>Add Question</button>\r\n                </div>\r\n                {\r\n                    (questionAnswer?.questions?.objective?.length<3 && questionAnswer?.questions?.subjective?.length<2 && questionAnswer?.questions?.logical?.length<2)?\r\n                    <h6 className=\"message\"> Your have to add minimum 3 objective, 2 subjective and 2 logical to complete this series</h6>:null\r\n                }\r\n                <div className=\"sub-obj-log-heading\">\r\n                    {\r\n                        questionAnswer?.questions?.objective?.length > 0 && (\r\n                            <div onClick={handleShowobjective}   className= { `heading-objective_tab ${showobjective ===true?'heading-objective-active ' :'heading-objective'}`} >Objective {questionAnswer?.questions?.objective?.length}</div>\r\n                        )\r\n                    }\r\n                    {\r\n                        questionAnswer?.questions?.subjective?.length > 0 && (\r\n                            <div   className= { `heading-objective_tab ${showsubjective ===true?'heading-objective-active' :'heading-objective'}`} onClick={handleShowSubjective}>Subjective {questionAnswer?.questions?.subjective?.length}</div>\r\n                        )\r\n                    }\r\n                    {\r\n                        questionAnswer?.questions?.logical?.length > 0 && (\r\n                            <div  className= {`heading-objective_tab ${showLogical ===true?'heading-objective-active' :'heading-objective'}` } onClick={handleShowLogical}>Logical { questionAnswer?.questions?.logical?.length}</div>\r\n                        )\r\n                    }\r\n                </div>\r\n                {\r\n                    showobjective &&\r\n                    questionAnswer?.questions?.objective?.map((Element, index) => (\r\n                        <>\r\n                            <input className=\"mcq-question-edit form-control\" type=\"text\" placeholder=\"Enter question\" defaultValue={Element.question} onChange={(e) => setQuestion(e.target.value)} />\r\n                            {Element?.options?.map((option, index) => (\r\n                                <input className=\"mcq-options form-control mt-4\" key={index} type=\"text\" placeholder={`Option ${index + 1}`} defaultValue={option} onChange={(e) => handleOptionChange(index, e.target.value, Element?.options)} />\r\n                            ))}\r\n                            <div className=\"correct_ans_outer d-flex gap-3 align-items-center justify-content-center\">\r\n                            <label className=\"cmn_text\">Select correct answer:</label>\r\n                            <select  defaultValue={Element.correctAnswer} onChange={(e) => setCorrectAnswer(parseInt(e.target.value))} >\r\n                                {Element?.options?.map((_, index) => (\r\n                                    <option key={index} value={index + 1}>{index + 1}</option>\r\n                                ))}\r\n                            </select>\r\n                            </div>\r\n                            <div className=\"Update_btn_outer\">\r\n                            <button className=\" cmn_btn_color me-3\" onClick={() => delteQuestion('objective', Element._id)}>DELETE</button>\r\n                            <button className=\"cmn_gray_btn\" onClick={() => updateObjectiveQuestion('objective', Element._id, Element.question, Element?.options, Element.correctAnswer)} >UPDATE</button>\r\n                            </div>\r\n                        </>\r\n                    ))}\r\n            </> \r\n            <>\r\n                {\r\n                    showsubjective &&\r\n                    questionAnswer?.questions?.subjective?.map((Element, index) => (\r\n                        <>\r\n                            <input className='mcq-question-edit form-control' type=\"text\" placeholder=\"Enter subjective question\" defaultValue={Element.question} onChange={(e) => setQuestion(e.target.value)} />\r\n                            <textarea className=\"testbox-textarea form-control mt-4\" type=\"text\" placeholder=\"Enter answer\" defaultValue={Element.answer} onChange={(e) => setAnswer(e.target.value)} />\r\n                            <div className=\"Update_btn_outer mt-4\">\r\n                            <button className=\"cmn_btn_color me-3\" onClick={() => delteQuestion('subjective', Element._id)} >DELETE</button>\r\n                            <button className=\"cmn_gray_btn\" onClick={() => handleUpdateSubjectiveQuestion('subjective', Element._id, Element.question, Element.answer)} >UPDATE</button>\r\n                            </div>\r\n                        </>\r\n                    ))\r\n                }\r\n            </>\r\n            <>\r\n                {\r\n                    showLogical &&\r\n                    questionAnswer?.questions?.logical?.map((Element, index) => (\r\n                        <>\r\n                            <textarea type=\"text\" className=\"testbox-textarea-logical-edit form-control\" placeholder=\"Enter logical question\" defaultValue={Element.question} onChange={(e) => setQuestion(e.target.value)} />\r\n                            <textarea className=\"testbox-textarea form-control mt-4\" type=\"text\" placeholder=\"Enter answer\" defaultValue={Element.answer} onChange={(e) => setAnswer(e.target.value)} />\r\n                            <div className=\"Update_btn_outer mt-4\">\r\n                            <button className=\"cmn_btn_color me-3\" onClick={() => delteQuestion('logical', Element._id)}>DELETE</button>\r\n                            <button className=\"cmn_gray_btn \" onClick={() => updateLogicalQuestion('logical', Element._id, Element.question, Element.answer)} >UPDATE</button>\r\n                            </div>\r\n                        </>\r\n                    ))\r\n                }\r\n            </>\r\n            </div>\r\n            <Toaster />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateQuestions"],"names":["UpdateQuestions","_questionAnswer$quest","_questionAnswer$quest2","_questionAnswer$quest3","_questionAnswer$quest4","_questionAnswer$quest5","_questionAnswer$quest6","_questionAnswer$quest7","_questionAnswer$quest8","_questionAnswer$quest9","_questionAnswer$quest10","_questionAnswer$quest11","_questionAnswer$quest12","_questionAnswer$quest13","_questionAnswer$quest14","_questionAnswer$quest15","_questionAnswer$quest16","_questionAnswer$quest17","_questionAnswer$quest18","_questionAnswer$quest19","_questionAnswer$quest20","_questionAnswer$quest21","_questionAnswer$quest22","_questionAnswer$quest23","_questionAnswer$quest24","navigate","useNavigate","configureChange","setConfigureSeriesChange","useState","questionAnswer","setQuestionAnswer","question","setQuestion","answer","setAnswer","correctAnswer","setCorrectAnswer","options","setOptions","showobjective","setShowObjective","showsubjective","setShowsubjective","showLogical","setShowLogical","series","localStorage","getItem","token","url","process","useEffect","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","concat","then","response","json","result","message","swal","catch","error","console","delteQuestion","type","id","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","handleDeleteConfirm","body","JSON","stringify","prev","toast","success","show","useAppContext","_jsxs","className","children","_Fragment","_jsx","onClick","questions","objective","length","subjective","logical","handleShowobjective","setItem","handleShowSubjective","handleShowLogical","map","Element","index","_Element$options","_Element$options2","placeholder","defaultValue","onChange","e","target","value","option","handleOptionChange","prevOpts","parseInt","_","_id","updateObjectiveQuestion","questionType","ques","optns","corrAns","filteredOptions","filter","trim","duration","handleUpdateSubjectiveQuestion","qus","ans","updateLogicalQuestion","Toaster"],"sourceRoot":""}