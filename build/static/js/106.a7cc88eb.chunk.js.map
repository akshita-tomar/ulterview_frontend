{"version":3,"file":"static/js/106.a7cc88eb.chunk.js","mappings":"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","sources":["components/candidates/hrRoundInvite.js","utils/encryption.js","../node_modules/@restart/ui/esm/Button.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport loader from '../../assets/loading.gif'\r\nimport { useEffect, useState } from 'react';\r\nimport { encryptId } from '../../utils/encryption'\r\nimport toast from 'react-hot-toast';\r\n\r\nconst InviteHrRound = (props) => {\r\n\r\n    let url = process.env.REACT_APP_BACKEND_URL\r\n    let interviewUrl = process.env.REACT_APP_INTERVIEW_URL\r\n    const [showLoader, setShowLoader] = useState(false)\r\n    const [series, setSeries] = useState([])\r\n    const [selectedSeriesId, setSelectedSeriesId] = useState('');\r\n    let token = localStorage.getItem('token')\r\n\r\n    useEffect(() => {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: myHeaders,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}getHrRoundSeries`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                // console.log('series ---',result)\r\n                setSeries(result.allSeries)\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }, [])\r\n\r\n\r\n    const handleSendLink = () => {\r\n        const encryptedCandidateId = encryptId(props.candidateID);\r\n        const testLink = `${interviewUrl}/hr-round/:${encodeURIComponent(encryptedCandidateId)}`;\r\n        console.log('test link ---', testLink)\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + token);\r\n\r\n        const raw = JSON.stringify({\r\n            \"candidateId\": props.candidateID,\r\n            \"seriesId\": selectedSeriesId,\r\n            \"link\": testLink\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        };\r\n\r\n        fetch(`${url}sendHrRoundQuesAns`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                if (result.type === 'success') {\r\n                    toast.success(result.message)\r\n                    props.handleChange(prev => prev + 1)\r\n                    props.onHide(false)\r\n                } else {\r\n                    if (result.message === 'Series Id not present.') {\r\n                        toast.error('Please enter series', {\r\n                            duration: 2000\r\n                        })\r\n                    } else {\r\n                        toast.error(result.message)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n    const handleSelectChange = (event) => {\r\n        setSelectedSeriesId(event.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                {...props}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter Invite_candidate_modal\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter heading\">\r\n\r\n                        Invite for HR Round\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='loader_outer_wrapper'>\r\n\r\n                        {showLoader && (<img src={loader} height={\"50px\"} width={\"50px\"} />)}\r\n                    </div>\r\n                    <select className=\"candidate-register-input form-control mt-3\" value={selectedSeriesId} onChange={handleSelectChange} >\r\n                        <option value=\"\">Select series</option>\r\n                        {series?.map((ele) => (\r\n\r\n                            <option disabled={ele.questions?.length < 3 || ele.questions === undefined} className={ele.questions?.length < 3 || ele.questions === undefined ? 'series-outer-box-pending' : \"series-outer-box\"} key={ele._id} value={ele._id}>\r\n                                {ele.questionSeries} {ele.questions?.length < 1 || ele.questions === undefined ? \"(pending)\" : null}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button className='cmn_btn_color' onClick={handleSendLink}>Send link</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default InviteHrRound","import sjcl from 'sjcl';\r\n\r\nconst SECRET_KEY = 'your-secret-key';\r\n\r\nexport const encryptId = (id) => {\r\n  try {\r\n    const encrypted = sjcl.encrypt(SECRET_KEY, id);\r\n    // console.log(\"Encrypted ID---\", encrypted);\r\n    return encrypted;\r\n  } catch (e) {\r\n    console.error(\"Encryption error:\", e);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const decryptId = (cipherText) => {\r\n  try {\r\n    const decrypted = sjcl.decrypt(SECRET_KEY, cipherText);\r\n    // console.log(\"Decrypted ID---\", decrypted);\r\n    return decrypted;\r\n  } catch (e) {\r\n    console.error(\"Decryption error:\", e);\r\n    return null;\r\n  }\r\n};\r\n","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["props","url","process","showLoader","setShowLoader","useState","series","setSeries","selectedSeriesId","setSelectedSeriesId","token","localStorage","getItem","useEffect","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","concat","then","response","json","result","allSeries","catch","error","console","_jsx","children","_jsxs","Modal","size","centered","Header","closeButton","Title","id","Body","className","src","loader","height","width","value","onChange","event","target","map","ele","_ele$questions","_ele$questions2","_ele$questions3","disabled","questions","length","undefined","_id","questionSeries","Footer","Button","onClick","handleSendLink","encryptedCandidateId","encryptId","candidateID","testLink","encodeURIComponent","log","body","JSON","stringify","type","toast","success","message","handleChange","prev","onHide","duration","SECRET_KEY","sjcl","e","decryptId","cipherText","_excluded","useButtonProps","_ref2","tagName","href","rel","role","tabIndex","meta","handleClick","trim","isTrivialHref","preventDefault","stopPropagation","onKeyDown","key","React","_ref","ref","as","asProp","source","excluded","i","sourceKeys","Object","keys","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName"],"sourceRoot":""}